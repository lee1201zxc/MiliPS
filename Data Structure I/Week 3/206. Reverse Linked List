### 이원호 풀이 ###
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head)
    {
        if(!head||!head->next)
            return head;
        ListNode * a=head;
        ListNode * b=head;
        ListNode * c=NULL;
        while(b)
        {
            b=b->next;
            a->next=c;
            c=a;
            a=b;
        }
        return c;
    }
};


### 강민수 풀이
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* prev = NULL;

        while(head && head->next){
            ListNode* forw = head->next;
            head->next = prev;
            prev = head;
            head = forw;
            forw = forw->next;
        }
        if (head) head->next = prev;
        return head;
    }
};

// 깔끔 풀이
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode *nextNode, *prevNode = NULL;
        while (head) {
            nextNode = head->next;
            head->next = prevNode;
            prevNode = head;
            head = nextNode;
        }
        return prevNode;
    }
};

class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if (!head || !(head -> next)) {
            return head;
        }
        ListNode* node = reverseList(head -> next);
        head -> next -> next = head;
        head -> next = NULL;
        return node;
    }
};
