### 강민수 풀이

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        queue<TreeNode*> q;
        int level = 0;
        if(root) q.push(root);
        while(!q.empty()){
            level++;
            int n = q.size();
            for(int i = 0 ; i< n; i++){
                TreeNode* t = q.front();
                q.pop();
                if (t->left) q.push(t->left);
                if (t->right) q.push(t->right);
            }
        }
        return level;
    }

};


### 이원호 풀이 ###

class Solution {
public:
    int maxDepth(TreeNode* root)
    {
        int z=0;
        queue<pair<TreeNode*,int>> q;
        if(!root)
            return 0;
        q.push(make_pair(root,0));
        while(!q.empty())
        {
            pair<TreeNode*,int> qq;
            qq=q.front();
            q.pop();
            if(qq.first->left)
                q.push(make_pair(qq.first->left,qq.second+1));
            if(qq.first->right)
                q.push(make_pair(qq.first->right,qq.second+1));
            z=q.back().second+1;             
        }
        return z;
    }
};
